<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zc.mapper.BkMapper">

    <resultMap id="BaseResultMap" type="com.zc.domain.Bk">
            <id property="bkId" column="bk_id" jdbcType="INTEGER"/>
            <result property="bkName" column="bk_name" jdbcType="VARCHAR"/>
            <result property="bkSex" column="bk_sex" jdbcType="CHAR"/>
            <result property="bkPhone" column="bk_phone" jdbcType="VARCHAR"/>
            <result property="bkPwd" column="bk_pwd" jdbcType="VARCHAR"/>
            <result property="role" column="role" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
        bk_id,bk_name,bk_sex,
        bk_phone,bk_pwd,role
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select *
        from tb_bk
        where  bk_id = #{bkId,jdbcType=INTEGER} 
    </select>
    <select id="loginBk" resultMap="BaseResultMap">
        select *
        from tb_bk
        where bk_id = #{bkId,jdbcType=INTEGER}
          and bk_pwd = #{bkPwd,jdbcType=VARCHAR};
    </select>
    <select id="selectByBkName" resultMap="BaseResultMap">
        select *
        from tb_bk
        where bk_name like CONCAT('%', #{bkName,jdbcType=VARCHAR}, '%');
    </select>
    <select id="getAll" resultMap="BaseResultMap">
        select *
        from tb_bk;
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from tb_bk
        where  bk_id = #{bkId,jdbcType=INTEGER} 
    </delete>
    <insert id="insert" keyColumn="bk_id" keyProperty="bkId" parameterType="com.zc.domain.Bk" useGeneratedKeys="true">
        insert into tb_bk
        ( bk_id,bk_name,bk_sex
        ,bk_phone,bk_pwd,role
        )
        values (#{bkId,jdbcType=INTEGER},#{bkName,jdbcType=VARCHAR},#{bkSex,jdbcType=CHAR}
        ,#{bkPhone,jdbcType=VARCHAR},#{bkPwd,jdbcType=VARCHAR},#{role,jdbcType=VARCHAR}
        )
    </insert>
    <insert id="insertSelective" keyColumn="bk_id" keyProperty="bkId" parameterType="com.zc.domain.Bk" useGeneratedKeys="true">
        insert into tb_bk
        <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="bkId != null">bk_id,</if>
                <if test="bkName != null">bk_name,</if>
                <if test="bkSex != null">bk_sex,</if>
                <if test="bkPhone != null">bk_phone,</if>
                <if test="bkPwd != null">bk_pwd,</if>
                <if test="role != null">role,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
                <if test="bkId != null">#{bkId,jdbcType=INTEGER},</if>
                <if test="bkName != null">#{bkName,jdbcType=VARCHAR},</if>
                <if test="bkSex != null">#{bkSex,jdbcType=CHAR},</if>
                <if test="bkPhone != null">#{bkPhone,jdbcType=VARCHAR},</if>
                <if test="bkPwd != null">#{bkPwd,jdbcType=VARCHAR},</if>
                <if test="role != null">#{role,jdbcType=VARCHAR},</if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.zc.domain.Bk">
        update tb_bk
        <set>
                <if test="bkName != null">
                    bk_name = #{bkName,jdbcType=VARCHAR},
                </if>
                <if test="bkSex != null">
                    bk_sex = #{bkSex,jdbcType=CHAR},
                </if>
                <if test="bkPhone != null">
                    bk_phone = #{bkPhone,jdbcType=VARCHAR},
                </if>
                <if test="bkPwd != null">
                    bk_pwd = #{bkPwd,jdbcType=VARCHAR},
                </if>
                <if test="role != null">
                    role = #{role,jdbcType=VARCHAR},
                </if>
        </set>
        where   bk_id = #{bkId,jdbcType=INTEGER} 
    </update>
    <update id="updateByPrimaryKey" parameterType="com.zc.domain.Bk">
        update tb_bk
        set 
            bk_name =  #{bkName,jdbcType=VARCHAR},
            bk_sex =  #{bkSex,jdbcType=CHAR},
            bk_phone =  #{bkPhone,jdbcType=VARCHAR},
            bk_pwd =  #{bkPwd,jdbcType=VARCHAR},
            role =  #{role,jdbcType=VARCHAR}
        where   bk_id = #{bkId,jdbcType=INTEGER} 
    </update>
</mapper>
